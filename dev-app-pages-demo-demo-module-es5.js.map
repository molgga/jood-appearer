{"version":3,"sources":["webpack:///projects/dev/src/app/pages/demo/lazy-actor/lazy-actor.component.ts","webpack:///projects/dev/src/app/pages/demo/demo.module.ts","webpack:///projects/dev/src/app/pages/demo/base-actor/base-actor.component.html","webpack:///projects/dev/src/app/pages/demo/demo.routing.ts","webpack:///projects/packages/src/actor/once-actor.ts","webpack:///projects/dev/src/app/pages/demo/lazy-actor/lazy-actor.component.scss","webpack:///projects/dev/src/app/pages/demo/once-actor/once-actor.component.ts","webpack:///projects/packages/src/common/types.ts","webpack:///projects/dev/src/app/pages/demo/base-actor/base-actor.component.ts","webpack:///projects/dev/src/app/modules/example/common/sample-actor/sample-actor.component.ts","webpack:///projects/dev/src/app/pages/demo/base-actor/base-actor.component.scss","webpack:///node_modules/intersection-observer/intersection-observer.js","webpack:///projects/dev/src/app/pages/demo/lazy-actor/lazy-actor.component.html","webpack:///projects/dev/src/app/pages/demo/once-actor/once-actor.component.scss","webpack:///projects/dev/src/app/modules/example/common/sample-actor/types.ts","webpack:///projects/dev/src/app/modules/example/common/sample-actor/sample-actor.component.scss","webpack:///projects/packages/src/actor/base-actor.ts","webpack:///projects/dev/src/app/pages/demo/once-actor/once-actor.component.html","webpack:///projects/packages/src/public-api.ts","webpack:///projects/dev/src/app/modules/example/common/common.module.ts","webpack:///projects/packages/src/actor/lazy-actor.ts","webpack:///projects/packages/src/stage/appear-stage.ts","webpack:///projects/dev/src/app/modules/example/common/sample-actor/sample-actor.component.html"],"names":["LazyActorComponent","actorMakeList","Array","from","map","a","b","id","appearStage","init","evt","type","actor","ATTACH","observe","DETACH","unobserve","dispose","err","console","log","selector","template","PageModule","imports","declarations","routes","path","children","component","RoutingModule","forChild","exports","OnceActor","entry","isAppear","dispatch","APPEAR","stage","OnceActorComponent","AppearType","AppearEvent","option","DISAPPEAR","BaseActorComponent","SampleActorComponent","elRef","emitter","appearCount","disappearCount","appearerListener","nativeElement","actorType","ONCE","LAZY","setCheckoutDelay","setAppearDelay","observeAppearEvent","events","subscribe","onAppearEvent","bind","add","emit","unsubscribe","window","IntersectionObserverEntry","prototype","Object","defineProperty","get","intersectionRatio","getFrameElement","doc","defaultView","frameElement","e","document","startDoc","frame","ownerDocument","registry","crossOriginUpdater","crossOriginRect","time","target","rootBounds","ensureDOMRect","boundingClientRect","intersectionRect","getEmptyRect","isIntersecting","targetRect","targetArea","width","height","intersectionArea","Number","toFixed","IntersectionObserver","callback","opt_options","options","Error","root","nodeType","_checkForIntersections","throttle","THROTTLE_TIMEOUT","_callback","_observationTargets","_queuedEntries","_rootMarginValues","_parseRootMargin","rootMargin","thresholds","_initThresholds","threshold","margin","value","unit","join","_monitoringDocuments","_monitoringUnsubscribes","POLL_INTERVAL","USE_MUTATION_OBSERVER","_setupCrossOriginUpdater","convertFromParentRect","forEach","observer","_resetCrossOriginUpdater","isTargetAlreadyObserved","some","item","element","_registerInstance","push","_monitorIntersections","filter","_unmonitorIntersections","length","_unregisterInstance","disconnect","_unmonitorAllIntersections","takeRecords","records","slice","opt_threshold","isArray","sort","t","i","isNaN","opt_rootMargin","marginString","margins","split","parts","exec","parseFloat","win","indexOf","monitoringInterval","domObserver","setInterval","addEvent","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","index","rootDoc","hasDependentTargets","itemDoc","splice","unsubscribes","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","now","_hasCrossedThreshold","getComputedStyle","display","parent","getParentNode","atRoot","parentRect","parentComputedStyle","frameRect","frameIntersect","body","documentElement","overflow","computeRectIntersection","html","top","left","right","clientWidth","bottom","clientHeight","_expandRectByRootMargin","rect","newRect","oldRatio","newRatio","containsDeep","performance","fn","timeout","timer","setTimeout","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","rect1","rect2","Math","max","min","el","y","x","parentBoundingRect","parentIntersectionRect","child","parentNode","host","assignedSlot","SampleActorType","SampleActorEventType","BaseActor","next","ExampleCommonModule","LazyActor","appearTimer","checkoutDelay","appearDelay","delay","clearTimeout","clearAppearTimer","doAppear","AppearStage","actorMap","Map","onObserveEntries","has","set","intersectionObserver","values","entries","appear","disappear","clear","size"],"mappings":"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","file":"dev-app-pages-demo-demo-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { AppearStage } from \"projects/packages/src/public-api\";\nimport {\n  SampleActorEvent,\n  SampleActorEventType,\n} from \"~/dev/app/modules/example/common/sample-actor/types\";\n\n@Component({\n  selector: \"example-lazy-actor\",\n  templateUrl: \"./lazy-actor.component.html\",\n  styleUrls: [\"./lazy-actor.component.scss\"],\n})\nexport class LazyActorComponent implements OnInit {\n  constructor() {}\n\n  actorMakeList: any[];\n  appearStage: AppearStage;\n\n  ngOnInit() {\n    this.actorMakeList = Array.from(Array(50)).map((a, b) => {\n      return { id: b };\n    });\n    this.appearStage = new AppearStage();\n    this.appearStage.init();\n  }\n\n  onSampleAppearEvent(evt: SampleActorEvent) {\n    const { type, actor } = evt;\n    switch (type) {\n      case SampleActorEventType.ATTACH:\n        this.appearStage.observe(actor);\n        break;\n      case SampleActorEventType.DETACH:\n        this.appearStage.unobserve(actor);\n        break;\n    }\n  }\n\n  ngOnDestroy() {\n    try {\n      if (this.appearStage) {\n        this.appearStage.dispose();\n        this.appearStage = null;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RoutingModule } from \"~/dev/app/pages/demo/demo.routing\";\nimport { SharedModule } from \"~/dev/app/shared/shared.module\";\nimport { ExampleCommonModule } from \"~/dev/app/modules/example/common/common.module\";\nimport { BaseActorComponent } from \"./base-actor/base-actor.component\";\nimport { OnceActorComponent } from \"./once-actor/once-actor.component\";\nimport { LazyActorComponent } from \"./lazy-actor/lazy-actor.component\";\n\n@NgModule({\n  imports: [CommonModule, RoutingModule, SharedModule, ExampleCommonModule],\n  declarations: [BaseActorComponent, OnceActorComponent, LazyActorComponent],\n})\nexport class PageModule {}\n","export default \"<div class=\\\"horizontal-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    [item]=\\\"item\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\\n<div class=\\\"vertical-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    [item]=\\\"item\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { BaseActorComponent } from \"./base-actor/base-actor.component\";\nimport { OnceActorComponent } from \"./once-actor/once-actor.component\";\nimport { LazyActorComponent } from \"./lazy-actor/lazy-actor.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    children: [\n      {\n        path: \"base-actor\",\n        component: BaseActorComponent,\n      },\n      {\n        path: \"once-actor\",\n        component: OnceActorComponent,\n      },\n      {\n        path: \"lazy-actor\",\n        component: LazyActorComponent,\n      },\n      {\n        path: \"**\",\n        component: BaseActorComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RoutingModule {}\n","import { BaseActor } from \"./base-actor\";\nimport { AppearEvent, IOnceActor } from \"../common/types\";\n\n/**\n * Stage 에 등록될 Actor.\n * 스테이지 진입을 한번만 감지한 후 본인 스스로 관찰 해제하는 감지형.\n * (사용 예: 화면 진입시 한번만 애니메이션 한다, 이미지 로드를 한다)\n * @class OnceActor\n * @extends {BaseActor}\n */\nexport class OnceActor extends BaseActor implements IOnceActor {\n  /**\n   * 스테이지 진입. 진입시 자동 관찰 해제.\n   * @override\n   * @param [entry]\n   */\n  appear(entry?: IntersectionObserverEntry): void {\n    if (this.isAppear) return;\n    this.isAppear = true;\n    this.dispatch(AppearEvent.APPEAR, entry);\n    if (this.stage) {\n      this.stage.unobserve(this);\n    }\n  }\n}\n","export default \".horizontal-list {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  overflow-x: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xhenktYWN0b3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQUNGIiwiZmlsZSI6ImxhenktYWN0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG9yaXpvbnRhbC1saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiBub3dyYXA7XG4gIG92ZXJmbG93LXg6IGF1dG87XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { AppearStage } from \"projects/packages/src/public-api\";\nimport {\n  SampleActorEvent,\n  SampleActorEventType,\n} from \"~/dev/app/modules/example/common/sample-actor/types\";\n\n@Component({\n  selector: \"example-once-actor\",\n  templateUrl: \"./once-actor.component.html\",\n  styleUrls: [\"./once-actor.component.scss\"],\n})\nexport class OnceActorComponent implements OnInit {\n  constructor() {}\n\n  actorMakeList: any[];\n  appearStage: AppearStage;\n\n  ngOnInit() {\n    this.actorMakeList = Array.from(Array(50)).map((a, b) => {\n      return { id: b };\n    });\n    this.appearStage = new AppearStage();\n    this.appearStage.init();\n  }\n\n  onSampleAppearEvent(evt: SampleActorEvent) {\n    const { type, actor } = evt;\n    switch (type) {\n      case SampleActorEventType.ATTACH:\n        this.appearStage.observe(actor);\n        break;\n      case SampleActorEventType.DETACH:\n        this.appearStage.unobserve(actor);\n        break;\n    }\n  }\n\n  ngOnDestroy() {\n    try {\n      if (this.appearStage) {\n        this.appearStage.dispose();\n        this.appearStage = null;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","import { Subject } from \"rxjs\";\n\n/**\n * Actor type 구분\n * @export\n * @enum {number}\n */\nexport enum AppearType {\n  BASE = \"base\",\n  ONCE = \"once\",\n  LAZY = \"lazy\"\n}\n\n/**\n * 관찰자\n * @interface IStage\n * @template T\n * @property init {method} 초기화\n * @property observe {method} 관찰 대상 등록\n * @property unobserve {method} 관찰 대상 해제\n * @property dispose {method} 파기\n */\nexport interface IStage<T> {\n  /**\n   * @param [option] 초기 옵션\n   */\n  init(option?: StageOption): void;\n\n  /**\n   * @param actor 관찰대상\n   */\n  observe(actor: T): void;\n\n  /**\n   * @param actor 관찰해제 대상\n   */\n  unobserve(actor: T): void;\n\n  /**\n   * 파기\n   */\n  dispose(): void;\n}\n\n/**\n * 관찰대상\n * @interface IActor\n * @property element {ActorElement} 관찰 대상이 참조해야하는 DOM\n * @property stage {IStage<any>} 관찰 대상이 속하게 되는 스테이지(관찰자)\n * @property events {Subject<AppearEvent>} 관찰 이벤트 Observable\n * @property isAppear {boolean} 현재 관찰대상의 진입, 이탈 여부\n * @property bind {method} 관찰 대상이 속하게 되는 스테이지(관찰자) 등록.\n * @property appear {method} 스테이지 진입.\n * @property disappear {method} 스테이지 이탈.\n * @property dispose {method} 파기\n */\nexport interface IActor {\n  element: ActorElement;\n  stage: IStage<any>;\n  events: Subject<AppearEvent>;\n  isAppear: boolean;\n\n  /**\n   * @param stage 관찰 대상으로 등록될 때 해당 인스턴스를 관찰하는 스테이지\n   */\n  bind(stage: IStage<IActor>): void;\n\n  /**\n   * @param [entry] 진입 당시 관찰 정보\n   */\n  appear(entry?: IntersectionObserverEntry): void;\n\n  /**\n   * @param [entry] 이탈 당시 관찰 정보\n   */\n  disappear(entry?: IntersectionObserverEntry): void;\n\n  dispose(): void;\n}\n\n/**\n * 관찰대상 - 한번만 형\n * @export\n * @interface IOnceActor\n */\nexport interface IOnceActor {}\n\n/**\n * 관찰대상 - 한번만 느긋하게 형\n * @export\n * @interface ILazyActor\n * @property setCheckoutDelay {method} 느린 감지를 시작하기 전 대기 시간.\n * @property setAppearDelay {method} 지정된 시간 사이에 진입 후 진출을 하는 경우 진입 알림을 하지 않는 대기 시간.\n */\nexport interface ILazyActor {\n  setCheckoutDelay?(delay: number): void;\n  setAppearDelay?(delay: number): void;\n}\n\nexport interface Actor extends IActor, IOnceActor, ILazyActor {}\n\n/**\n * 관찰자, 관찰대상에서 참조되어야 하는 native element 타입\n * @typedef {HTMLElement | Element} ActorElement\n */\nexport type ActorElement = HTMLElement | Element;\n\n/**\n * 스테이지 초기 옵션.\n * @interface StageOption\n * @property root {Element} mdn 참고\n * @property rootMargin {string} mdn 참고\n * @property threshold {string | array} mdn 참고\n * @extends {IntersectionObserverInit}\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n */\nexport interface StageOption extends IntersectionObserverInit {}\n\n/**\n * 관찰대상의 이벤트\n * @implements {AppearEventData<T>}\n * @template T\n */\nexport class AppearEvent<T = IActor> implements AppearEventData<T> {\n  /**\n   * @param type 이벤트 타입\n   * @param option 이벤트 데이터\n   */\n  constructor(type: string, option: AppearEventData<T>) {\n    const { actor, entry } = option;\n    this.type = type;\n    this.actor = actor;\n    this.entry = entry;\n  }\n\n  /**\n   * 이벤트 타입 - 진입\n   */\n  static readonly APPEAR: string = \"APPEAR\";\n\n  /**\n   * 이벤트 타입 - 이탈\n   */\n  static readonly DISAPPEAR: string = \"DISAPPEAR\";\n\n  /**\n   * 이벤트 타입\n   */\n  type: string;\n\n  /**\n   * 참조되는 관찰대상\n   */\n  actor: T;\n\n  /**\n   * 인터섹션 옵저버의 진입, 이탈 당시 관찰 상태\n   */\n  entry: IntersectionObserverEntry;\n}\n\n/**\n * Appear 이벤트의 데이터\n * @interface AppearEventData\n * @property actor {T} 참조되는 관찰대상\n * @property entry {IntersectionObserverEntry} 인터섹션 옵저버의 진입, 이탈 당시 관찰 상태\n * @template T\n */\nexport interface AppearEventData<T> {\n  actor: T;\n  entry: IntersectionObserverEntry;\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { AppearStage } from \"projects/packages/src/public-api\";\nimport {\n  SampleActorEvent,\n  SampleActorEventType,\n} from \"~/dev/app/modules/example/common/sample-actor/types\";\n\n@Component({\n  selector: \"example-base-actor\",\n  templateUrl: \"./base-actor.component.html\",\n  styleUrls: [\"./base-actor.component.scss\"],\n})\nexport class BaseActorComponent implements OnInit {\n  constructor() {}\n\n  actorMakeList: any[] = [];\n  appearStage: AppearStage;\n\n  ngOnInit() {\n    this.actorMakeList = Array.from(Array(50)).map((a, b) => {\n      return { id: b };\n    });\n    this.appearStage = new AppearStage();\n    this.appearStage.init();\n  }\n\n  onSampleAppearEvent(evt: SampleActorEvent) {\n    const { type, actor } = evt;\n    switch (type) {\n      case SampleActorEventType.ATTACH:\n        this.appearStage.observe(actor);\n        break;\n      case SampleActorEventType.DETACH:\n        this.appearStage.unobserve(actor);\n        break;\n    }\n  }\n\n  ngOnDestroy() {\n    try {\n      if (this.appearStage) {\n        this.appearStage.dispose();\n        this.appearStage = null;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","import { Subscription } from \"rxjs\";\nimport {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n} from \"@angular/core\";\nimport {\n  Actor,\n  OnceActor,\n  LazyActor,\n  BaseActor,\n  AppearEvent,\n} from \"projects/packages/src/public-api\";\nimport {\n  SampleActorType,\n  SampleActorEvent,\n  SampleActorEventType,\n} from \"~/dev/app/modules/example/common/sample-actor/types\";\n\n@Component({\n  selector: \"sample-actor\",\n  templateUrl: \"./sample-actor.component.html\",\n  styleUrls: [\"./sample-actor.component.scss\"],\n})\nexport class SampleActorComponent implements OnInit {\n  constructor(private elRef: ElementRef) {\n    this.appearerListener = new Subscription();\n  }\n\n  actor: Actor;\n  appearerListener: Subscription;\n\n  @Input()\n  item: any;\n\n  @Input()\n  actorType: SampleActorType;\n\n  @Output(\"sampleEvent\")\n  emitter: EventEmitter<SampleActorEvent> = new EventEmitter();\n\n  @HostBinding(\"class.is-appeared\")\n  get isAppeared() {\n    return !!(this.actor && this.actor.isAppear);\n  }\n\n  ngOnInit() {\n    const { nativeElement } = this.elRef;\n    switch (this.actorType) {\n      case SampleActorType.ONCE:\n        this.actor = new OnceActor(nativeElement);\n        break;\n      case SampleActorType.LAZY:\n        this.actor = new LazyActor(nativeElement);\n        this.actor.setCheckoutDelay(1000);\n        this.actor.setAppearDelay(200);\n        break;\n      default:\n        this.actor = new BaseActor(nativeElement);\n        break;\n    }\n\n    const observeAppearEvent = this.actor.events.subscribe(\n      this.onAppearEvent.bind(this)\n    );\n    this.appearerListener.add(observeAppearEvent);\n    this.emitter.emit({\n      type: SampleActorEventType.ATTACH,\n      actor: this.actor,\n    });\n  }\n\n  appearCount: number = 0;\n  disappearCount: number = 0;\n\n  onAppearEvent(evt: AppearEvent) {\n    switch (evt.type) {\n      case AppearEvent.APPEAR:\n        this.appearCount++;\n        break;\n      case AppearEvent.DISAPPEAR:\n        this.disappearCount++;\n        break;\n    }\n  }\n\n  ngOnDestroy() {\n    try {\n      this.emitter.emit({\n        type: SampleActorEventType.DETACH,\n        actor: this.actor,\n      });\n      if (this.appearerListener) {\n        this.appearerListener.unsubscribe();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","export default \".horizontal-list {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  overflow-x: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2Jhc2UtYWN0b3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQUNGIiwiZmlsZSI6ImJhc2UtYWN0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG9yaXpvbnRhbC1saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiBub3dyYXA7XG4gIG92ZXJmbG93LXg6IGF1dG87XG59XG4iXX0= */\";","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  if (doc != (this.root && this.root.ownerDocument || document)) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc = (this.root && this.root.ownerDocument || document);\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: crossOriginUpdater && !this.root ? null : rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target) &&\n    (!this.root || this.root.ownerDocument == target.ownerDocument);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  if (parent && parent.assignedSlot) {\n    // If the parent is distributed in a <slot>, return the parent of a slot.\n    return parent.assignedSlot.parentNode;\n  }\n\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n","export default \"<div class=\\\"horizontal-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    actorType=\\\"lazy\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\\n<div class=\\\"vertical-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    actorType=\\\"lazy\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\";","export default \".horizontal-list {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  overflow-x: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL29uY2UtYWN0b3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQUNGIiwiZmlsZSI6Im9uY2UtYWN0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG9yaXpvbnRhbC1saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiBub3dyYXA7XG4gIG92ZXJmbG93LXg6IGF1dG87XG59XG4iXX0= */\";","import { Actor } from \"projects/packages/src/public-api\";\n\nexport enum SampleActorType {\n  BASE = \"base\",\n  ONCE = \"once\",\n  LAZY = \"lazy\",\n}\n\nexport enum SampleActorEventType {\n  ATTACH = \"ATTACH\",\n  DETACH = \"DETACH\",\n}\n\nexport interface SampleActorEvent {\n  type: SampleActorEventType;\n  actor: Actor;\n}\n","export default \":host {\\n  display: block;\\n  margin: 10px;\\n  padding: 20px;\\n  color: #333333;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  background-color: #ffffff;\\n  transition: color 300ms, background-color 300ms;\\n}\\n:host.is-appeared {\\n  color: #ffffff;\\n  background-color: #333333;\\n}\\n:host .panel-count {\\n  display: flex;\\n  text-align: center;\\n}\\n:host .panel-count .spacer {\\n  flex: 1;\\n  min-width: 20px;\\n}\\n:host .panel-count .label {\\n  display: block;\\n  font-size: 13px;\\n}\\n:host .panel-count .count {\\n  display: block;\\n  padding-top: 5px;\\n  font-size: 24px;\\n  font-weight: bold;\\n}\\n:host .panel-item {\\n  padding-top: 5px;\\n  text-align: center;\\n  font-size: 13px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NhbXBsZS1hY3Rvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EseUJBQUE7RUFDQSwrQ0FBQTtBQUNGO0FBQUU7RUFDRSxjQUFBO0VBQ0EseUJBQUE7QUFFSjtBQUNFO0VBQ0UsYUFBQTtFQUNBLGtCQUFBO0FBQ0o7QUFBSTtFQUNFLE9BQUE7RUFDQSxlQUFBO0FBRU47QUFBSTtFQUNFLGNBQUE7RUFDQSxlQUFBO0FBRU47QUFBSTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQUVOO0FBRUU7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUFKIiwiZmlsZSI6InNhbXBsZS1hY3Rvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMTBweDtcbiAgcGFkZGluZzogMjBweDtcbiAgY29sb3I6ICMzMzMzMzM7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMsIGJhY2tncm91bmQtY29sb3IgMzAwbXM7XG4gICYuaXMtYXBwZWFyZWQge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XG4gIH1cblxuICAucGFuZWwtY291bnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC5zcGFjZXIge1xuICAgICAgZmxleDogMTtcbiAgICAgIG1pbi13aWR0aDogMjBweDtcbiAgICB9XG4gICAgLmxhYmVsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgIH1cbiAgICAuY291bnQge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nLXRvcDogNXB4O1xuICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxuICB9XG5cbiAgLnBhbmVsLWl0ZW0ge1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgfVxufVxuIl19 */\";","import { ActorElement, AppearEvent, IActor, IStage } from \"../common/types\";\nimport { Subject } from \"rxjs\";\n\n/**\n * Stage 에 등록될 Actor.\n * 스테이지에 진입, 이탈 시 계속 알려주는 기본형.\n * @class BaseActor\n * @implements {IActor}\n */\nexport class BaseActor implements IActor {\n  /**\n   * @param element 옵저버에 등록되어야 하는 native element\n   */\n  constructor(element: ActorElement) {\n    this.element = element;\n  }\n\n  /**\n   * 옵저버에 등록될 native element\n   */\n  element: ActorElement;\n\n  /**\n   * 이벤트 Observable\n   * @see https://rxjs-dev.firebaseapp.com/guide/subject\n   */\n  events: Subject<AppearEvent> = new Subject<AppearEvent>();\n\n  /**\n   * 해당 인스턴스가 등록된 스테이지\n   */\n  stage: IStage<BaseActor>;\n\n  /**\n   * 현재 진입 여부 상태\n   */\n  isAppear: boolean = false;\n\n  /**\n   * 해당 인스턴스를 관찰하는 스테이지를 연결\n   * @param stage 스테이지\n   */\n  bind(stage: IStage<BaseActor>) {\n    this.stage = stage;\n  }\n\n  /**\n   * 진입, 이탈 등 이벤트 알림\n   * @param type 이벤트 타입\n   * @param [entry] 상태 변경시 관찰된 상태\n   */\n  dispatch(type: string, entry?: IntersectionObserverEntry) {\n    this.events.next(\n      new AppearEvent(type, {\n        actor: this,\n        entry\n      })\n    );\n  }\n\n  /**\n   * 스테이지 진입\n   * @param [entry] 스테이지 진입시 관찰 상태\n   */\n  appear(entry?: IntersectionObserverEntry): void {\n    if (this.isAppear) return;\n    this.isAppear = true;\n    this.dispatch(AppearEvent.APPEAR, entry);\n  }\n\n  /**\n   * 스테이지 이탈\n   * @param [entry] 스테이지 이탈시 관찰 상태\n   */\n  disappear(entry?: IntersectionObserverEntry): void {\n    if (!this.isAppear) return;\n    this.isAppear = false;\n    this.dispatch(AppearEvent.DISAPPEAR, entry);\n  }\n\n  /**\n   * 파기\n   */\n  dispose() {\n    if (this.stage) {\n      this.stage.unobserve(this);\n    }\n  }\n}\n","export default \"<div class=\\\"horizontal-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    actorType=\\\"once\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\\n<div class=\\\"vertical-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    actorType=\\\"once\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\";","import \"intersection-observer\";\n\nexport * from \"./stage/appear-stage\";\nexport * from \"./actor/base-actor\";\nexport * from \"./actor/once-actor\";\nexport * from \"./actor/lazy-actor\";\nexport * from \"./common/types\";\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SampleActorComponent } from \"~/dev/app/modules/example/common/sample-actor/sample-actor.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [SampleActorComponent],\n  declarations: [SampleActorComponent],\n})\nexport class ExampleCommonModule {}\n","import { BaseActor } from \"./base-actor\";\nimport { AppearEvent, ILazyActor } from \"../common/types\";\n\n/**\n * Stage 에 등록될 Actor.\n * 스테이지에 진입을 한번만 감지하되, 진입 후 너무 빠르게 이탈시에는 감지 처리를 하지 않는 느린 감지형.\n * (사용 예: 촘촘한 상품 목록과 같이 빠르게 스크롤 하여 지나칠 수 있는 곳)\n * @class LazyActor\n * @extends {BaseActor}\n */\nexport class LazyActor extends BaseActor implements ILazyActor {\n  private appearTimer: any = null;\n  private checkoutDelay: number = 1000;\n  private appearDelay: number = 150;\n\n  /**\n   * 느린 감지를 시작하기 전 대기 시간.\n   * 지정된 시간 전에 감지된 진입은 느린 감지를 하지 않고 바로 진입을 알림.\n   * @param [delay=1000]\n   */\n  setCheckoutDelay(delay: number = 1000) {\n    this.checkoutDelay = delay;\n  }\n\n  /**\n   * 지정된 시간 사이에 진입 후 진출을 하는 경우 진입 알림을 하지 않는 대기 시간.\n   * @param [delay=150]\n   */\n  setAppearDelay(delay: number = 150) {\n    this.appearDelay = delay;\n  }\n\n  /**\n   * 진입 대기 타이머 파기\n   */\n  private clearAppearTimer() {\n    if (this.appearTimer) {\n      clearTimeout(this.appearTimer);\n      this.appearTimer = null;\n    }\n  }\n\n  /**\n   * 스테이지 진입. 진입 후 일정시간 (appearDelay) 전에 이탈하는 경우는 진입으로 취급하지 않음.\n   * @override\n   * @param [entry]\n   */\n  appear(entry: IntersectionObserverEntry) {\n    this.clearAppearTimer();\n    if (this.isAppear) return;\n    if (this.checkoutDelay <= entry.time) {\n      this.appearTimer = setTimeout(() => {\n        this.doAppear(entry);\n      }, this.appearDelay);\n    } else {\n      this.doAppear(entry);\n    }\n  }\n\n  /**\n   * 실제 진입 처리.\n   * @private\n   * @param entry\n   */\n  private doAppear(entry: IntersectionObserverEntry) {\n    this.isAppear = true;\n    this.dispatch(AppearEvent.APPEAR, entry);\n    if (this.stage) {\n      this.stage.unobserve(this);\n    }\n  }\n\n  /**\n   * 스테이지 이탈.\n   * @override\n   * @param entry\n   */\n  disappear(entry: IntersectionObserverEntry) {\n    this.clearAppearTimer();\n    if (!this.isAppear) return;\n    this.isAppear = false;\n    this.dispatch(AppearEvent.DISAPPEAR, entry);\n  }\n}\n","import { IStage, StageOption, Actor, ActorElement } from \"../common/types\";\n\n/**\n * 화면(지정된 root 영역)에 진입 여부를 판단하고 알리기 위한 클래스.\n * 등록된 Actor(s)를 IntersectionObserver 를 통해 관찰하고 관찰된 상태에 따라 Actor 에게 알림.\n * @template T Actor\n */\nexport class AppearStage<T extends Actor = Actor> implements IStage<T> {\n  /**\n   * Actor 맵\n   */\n  protected actorMap: Map<ActorElement, T>;\n\n  /**\n   * IntersectionObserver\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n   */\n  protected observer: IntersectionObserver;\n\n  /**\n   * 초기화\n   * @param [option] 초기 옵션. 인터섹션 옵저버는 생성시에만 옵션 지정이 가능\n   */\n  init(option: StageOption = {}): void {\n    if (!this.observer) {\n      this.actorMap = new Map<ActorElement, T>();\n      this.observer = new IntersectionObserver(\n        this.onObserveEntries.bind(this),\n        option\n      );\n    }\n  }\n\n  /**\n   * 전달된 actor 를 옵저버에 등록합니다.\n   * @param actor 등록할 Actor\n   */\n  observe(actor: T): void {\n    const { element } = actor;\n    if (this.actorMap && !this.actorMap.has(element)) {\n      actor.bind(this);\n      this.actorMap.set(element, actor);\n      this.intersectionObserver.observe(element);\n    }\n  }\n\n  /**\n   * 전달된 actor 를 옵저버에서 제외합니다.\n   * @param actor 제외할 Actor\n   */\n  unobserve(actor: T): void {\n    const { element } = actor;\n    if (this.actorMap && this.actorMap.has(element)) {\n      this.actorMap.delete(element);\n      this.intersectionObserver.unobserve(element);\n    }\n  }\n\n  /**\n   * 옵저버에 등록(관찰) 중 인 Actor 의 수\n   */\n  get actorSize() {\n    return this.actorMap ? this.actorMap.size : 0;\n  }\n\n  /**\n   * 등록 되어있는 Actor 를 반환 합니다.\n   * @returns T[]\n   */\n  getActors(): T[] {\n    return Array.from(this.actorMap ? this.actorMap.values() : []);\n  }\n\n  /**\n   * 생성된 intersection observer 인스턴스\n   */\n  get intersectionObserver(): IntersectionObserver {\n    if (!this.observer) throw new Error(\"uninitialize\");\n    return this.observer;\n  }\n\n  /**\n   * 옵저버의 콜백 핸들러\n   * @param entries 옵저버의 콜백으로 전달받는 엔트리 값\n   */\n  protected onObserveEntries(entries: IntersectionObserverEntry[]) {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (!this.actorMap) return;\n      const { isIntersecting, target } = entry;\n      const actor = this.actorMap.get(target);\n      if (actor) {\n        if (isIntersecting) {\n          actor.appear(entry);\n        } else {\n          actor.disappear(entry);\n        }\n      }\n    });\n  }\n\n  /**\n   * 파기\n   */\n  dispose(): void {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n    if (this.actorMap) {\n      this.actorMap.clear();\n      this.actorMap = null;\n    }\n  }\n}\n","export default \"<div class=\\\"panel-count\\\">\\n  <div class=\\\"aside\\\">\\n    <span class=\\\"label\\\">appearCount</span>\\n    <span class=\\\"count\\\">{{ appearCount }}</span>\\n  </div>\\n  <div class=\\\"spacer\\\"></div>\\n  <div class=\\\"bside\\\">\\n    <span class=\\\"label\\\">disappearCount</span>\\n    <span class=\\\"count\\\">{{ disappearCount }}</span>\\n  </div>\\n</div>\\n<div class=\\\"panel-item\\\">\\n  {{ item | json }}\\n</div>\\n\";"]}