{"version":3,"sources":["/home/travis/build/molgga/jood-appearer/node_modules/intersection-observer/intersection-observer.js","./src/app/modules/example/common/sample-actor/sample-actor.component.html","./src/app/pages/demo/base-actor/base-actor.component.html","./src/app/pages/demo/lazy-actor/lazy-actor.component.html","./src/app/pages/demo/once-actor/once-actor.component.html","../packages/src/actor/base-actor.ts","../packages/src/actor/lazy-actor.ts","../packages/src/actor/once-actor.ts","../packages/src/common/types.ts","../packages/src/public-api.ts","../packages/src/stage/appear-stage.ts","./src/app/modules/example/common/common.module.ts","./src/app/modules/example/common/sample-actor/sample-actor.component.scss","./src/app/modules/example/common/sample-actor/sample-actor.component.ts","./src/app/modules/example/common/sample-actor/types.ts","./src/app/pages/demo/base-actor/base-actor.component.scss","./src/app/pages/demo/base-actor/base-actor.component.ts","./src/app/pages/demo/demo.module.ts","./src/app/pages/demo/demo.routing.ts","./src/app/pages/demo/lazy-actor/lazy-actor.component.scss","./src/app/pages/demo/lazy-actor/lazy-actor.component.ts","./src/app/pages/demo/once-actor/once-actor.component.scss","./src/app/pages/demo/once-actor/once-actor.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,uBAAuB,kBAAkB;AACzC;AACA,uBAAuB,mBAAmB;AAC1C;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,6BAA6B;AAC9D;AACA;AACA;;;AAGA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA,WAAW,0BAA0B;AACrC;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;AAGA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,mBAAmB;AAC/B;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,YAAY;AACZ;AACA;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","file":"dev-app-pages-demo-demo-module-es2015.js","sourcesContent":["/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  if (doc != (this.root && this.root.ownerDocument || document)) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc = (this.root && this.root.ownerDocument || document);\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: crossOriginUpdater && !this.root ? null : rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target) &&\n    (!this.root || this.root.ownerDocument == target.ownerDocument);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  if (parent && parent.assignedSlot) {\n    // If the parent is distributed in a <slot>, return the parent of a slot.\n    return parent.assignedSlot.parentNode;\n  }\n\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n","export default \"<div class=\\\"panel-count\\\">\\n  <div class=\\\"aside\\\">\\n    <span class=\\\"label\\\">appearCount</span>\\n    <span class=\\\"count\\\">{{ appearCount }}</span>\\n  </div>\\n  <div class=\\\"spacer\\\"></div>\\n  <div class=\\\"bside\\\">\\n    <span class=\\\"label\\\">disappearCount</span>\\n    <span class=\\\"count\\\">{{ disappearCount }}</span>\\n  </div>\\n</div>\\n<div class=\\\"panel-item\\\">\\n  {{ item | json }}\\n</div>\\n\";","export default \"<div class=\\\"horizontal-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    [item]=\\\"item\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\\n<div class=\\\"vertical-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    [item]=\\\"item\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\";","export default \"<div class=\\\"horizontal-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    actorType=\\\"lazy\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\\n<div class=\\\"vertical-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    actorType=\\\"lazy\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\";","export default \"<div class=\\\"horizontal-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    actorType=\\\"once\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\\n<div class=\\\"vertical-list\\\">\\n  <sample-actor\\n    *ngFor=\\\"let item of actorMakeList\\\"\\n    actorType=\\\"once\\\"\\n    (sampleEvent)=\\\"onSampleAppearEvent($event)\\\"\\n  >\\n  </sample-actor>\\n</div>\\n\";","import { ActorElement, AppearEvent, IActor, IStage } from \"../common/types\";\nimport { Subject } from \"rxjs\";\n\n/**\n * Stage 에 등록될 Actor.\n * 스테이지에 진입, 이탈 시 계속 알려주는 기본형.\n * @class BaseActor\n * @implements {IActor}\n */\nexport class BaseActor implements IActor {\n  /**\n   * @param element 옵저버에 등록되어야 하는 native element\n   */\n  constructor(element: ActorElement) {\n    this.element = element;\n  }\n\n  /**\n   * 옵저버에 등록될 native element\n   */\n  element: ActorElement;\n\n  /**\n   * 이벤트 Observable\n   * @see https://rxjs-dev.firebaseapp.com/guide/subject\n   */\n  events: Subject<AppearEvent> = new Subject<AppearEvent>();\n\n  /**\n   * 해당 인스턴스가 등록된 스테이지\n   */\n  stage: IStage<BaseActor>;\n\n  /**\n   * 현재 진입 여부 상태\n   */\n  isAppear: boolean = false;\n\n  /**\n   * 해당 인스턴스를 관찰하는 스테이지를 연결\n   * @param stage 스테이지\n   */\n  bind(stage: IStage<BaseActor>) {\n    this.stage = stage;\n  }\n\n  /**\n   * 진입, 이탈 등 이벤트 알림\n   * @param type 이벤트 타입\n   * @param [entry] 상태 변경시 관찰된 상태\n   */\n  dispatch(type: string, entry?: IntersectionObserverEntry) {\n    this.events.next(\n      new AppearEvent(type, {\n        actor: this,\n        entry\n      })\n    );\n  }\n\n  /**\n   * 스테이지 진입\n   * @param [entry] 스테이지 진입시 관찰 상태\n   */\n  appear(entry?: IntersectionObserverEntry): void {\n    if (this.isAppear) return;\n    this.isAppear = true;\n    this.dispatch(AppearEvent.APPEAR, entry);\n  }\n\n  /**\n   * 스테이지 이탈\n   * @param [entry] 스테이지 이탈시 관찰 상태\n   */\n  disappear(entry?: IntersectionObserverEntry): void {\n    if (!this.isAppear) return;\n    this.isAppear = false;\n    this.dispatch(AppearEvent.DISAPPEAR, entry);\n  }\n\n  /**\n   * 파기\n   */\n  dispose() {\n    if (this.stage) {\n      this.stage.unobserve(this);\n    }\n  }\n}\n","import { BaseActor } from \"./base-actor\";\nimport { AppearEvent, ILazyActor } from \"../common/types\";\n\n/**\n * Stage 에 등록될 Actor.\n * 스테이지에 진입을 한번만 감지하되, 진입 후 너무 빠르게 이탈시에는 감지 처리를 하지 않는 느린 감지형.\n * (사용 예: 촘촘한 상품 목록과 같이 빠르게 스크롤 하여 지나칠 수 있는 곳)\n * @class LazyActor\n * @extends {BaseActor}\n */\nexport class LazyActor extends BaseActor implements ILazyActor {\n  private appearTimer: any = null;\n  private checkoutDelay: number = 1000;\n  private appearDelay: number = 150;\n\n  /**\n   * 느린 감지를 시작하기 전 대기 시간.\n   * 지정된 시간 전에 감지된 진입은 느린 감지를 하지 않고 바로 진입을 알림.\n   * @param [delay=1000]\n   */\n  setCheckoutDelay(delay: number = 1000) {\n    this.checkoutDelay = delay;\n  }\n\n  /**\n   * 지정된 시간 사이에 진입 후 진출을 하는 경우 진입 알림을 하지 않는 대기 시간.\n   * @param [delay=150]\n   */\n  setAppearDelay(delay: number = 150) {\n    this.appearDelay = delay;\n  }\n\n  /**\n   * 진입 대기 타이머 파기\n   */\n  private clearAppearTimer() {\n    if (this.appearTimer) {\n      clearTimeout(this.appearTimer);\n      this.appearTimer = null;\n    }\n  }\n\n  /**\n   * 스테이지 진입. 진입 후 일정시간 (appearDelay) 전에 이탈하는 경우는 진입으로 취급하지 않음.\n   * @override\n   * @param [entry]\n   */\n  appear(entry: IntersectionObserverEntry) {\n    this.clearAppearTimer();\n    if (this.isAppear) return;\n    if (this.checkoutDelay <= entry.time) {\n      this.appearTimer = setTimeout(() => {\n        this.doAppear(entry);\n      }, this.appearDelay);\n    } else {\n      this.doAppear(entry);\n    }\n  }\n\n  /**\n   * 실제 진입 처리.\n   * @private\n   * @param entry\n   */\n  private doAppear(entry: IntersectionObserverEntry) {\n    this.isAppear = true;\n    this.dispatch(AppearEvent.APPEAR, entry);\n    if (this.stage) {\n      this.stage.unobserve(this);\n    }\n  }\n\n  /**\n   * 스테이지 이탈.\n   * @override\n   * @param entry\n   */\n  disappear(entry: IntersectionObserverEntry) {\n    this.clearAppearTimer();\n    if (!this.isAppear) return;\n    this.isAppear = false;\n    this.dispatch(AppearEvent.DISAPPEAR, entry);\n  }\n}\n","import { BaseActor } from \"./base-actor\";\nimport { AppearEvent, IOnceActor } from \"../common/types\";\n\n/**\n * Stage 에 등록될 Actor.\n * 스테이지 진입을 한번만 감지한 후 본인 스스로 관찰 해제하는 감지형.\n * (사용 예: 화면 진입시 한번만 애니메이션 한다, 이미지 로드를 한다)\n * @class OnceActor\n * @extends {BaseActor}\n */\nexport class OnceActor extends BaseActor implements IOnceActor {\n  /**\n   * 스테이지 진입. 진입시 자동 관찰 해제.\n   * @override\n   * @param [entry]\n   */\n  appear(entry?: IntersectionObserverEntry): void {\n    if (this.isAppear) return;\n    this.isAppear = true;\n    this.dispatch(AppearEvent.APPEAR, entry);\n    if (this.stage) {\n      this.stage.unobserve(this);\n    }\n  }\n}\n","import { Subject } from \"rxjs\";\n\n/**\n * Actor type 구분\n * @export\n * @enum {number}\n */\nexport enum AppearType {\n  BASE = \"base\",\n  ONCE = \"once\",\n  LAZY = \"lazy\"\n}\n\n/**\n * 관찰자\n * @interface IStage\n * @template T\n * @property init {method} 초기화\n * @property observe {method} 관찰 대상 등록\n * @property unobserve {method} 관찰 대상 해제\n * @property dispose {method} 파기\n */\nexport interface IStage<T> {\n  /**\n   * @param [option] 초기 옵션\n   */\n  init(option?: StageOption): void;\n\n  /**\n   * @param actor 관찰대상\n   */\n  observe(actor: T): void;\n\n  /**\n   * @param actor 관찰해제 대상\n   */\n  unobserve(actor: T): void;\n\n  /**\n   * 파기\n   */\n  dispose(): void;\n}\n\n/**\n * 관찰대상\n * @interface IActor\n * @property element {ActorElement} 관찰 대상이 참조해야하는 DOM\n * @property stage {IStage<any>} 관찰 대상이 속하게 되는 스테이지(관찰자)\n * @property events {Subject<AppearEvent>} 관찰 이벤트 Observable\n * @property isAppear {boolean} 현재 관찰대상의 진입, 이탈 여부\n * @property bind {method} 관찰 대상이 속하게 되는 스테이지(관찰자) 등록.\n * @property appear {method} 스테이지 진입.\n * @property disappear {method} 스테이지 이탈.\n * @property dispose {method} 파기\n */\nexport interface IActor {\n  element: ActorElement;\n  stage: IStage<any>;\n  events: Subject<AppearEvent>;\n  isAppear: boolean;\n\n  /**\n   * @param stage 관찰 대상으로 등록될 때 해당 인스턴스를 관찰하는 스테이지\n   */\n  bind(stage: IStage<IActor>): void;\n\n  /**\n   * @param [entry] 진입 당시 관찰 정보\n   */\n  appear(entry?: IntersectionObserverEntry): void;\n\n  /**\n   * @param [entry] 이탈 당시 관찰 정보\n   */\n  disappear(entry?: IntersectionObserverEntry): void;\n\n  dispose(): void;\n}\n\n/**\n * 관찰대상 - 한번만 형\n * @export\n * @interface IOnceActor\n */\nexport interface IOnceActor {}\n\n/**\n * 관찰대상 - 한번만 느긋하게 형\n * @export\n * @interface ILazyActor\n * @property setCheckoutDelay {method} 느린 감지를 시작하기 전 대기 시간.\n * @property setAppearDelay {method} 지정된 시간 사이에 진입 후 진출을 하는 경우 진입 알림을 하지 않는 대기 시간.\n */\nexport interface ILazyActor {\n  setCheckoutDelay?(delay: number): void;\n  setAppearDelay?(delay: number): void;\n}\n\nexport interface Actor extends IActor, IOnceActor, ILazyActor {}\n\n/**\n * 관찰자, 관찰대상에서 참조되어야 하는 native element 타입\n * @typedef {HTMLElement | Element} ActorElement\n */\nexport type ActorElement = HTMLElement | Element;\n\n/**\n * 스테이지 초기 옵션.\n * @interface StageOption\n * @property root {Element} mdn 참고\n * @property rootMargin {string} mdn 참고\n * @property threshold {string | array} mdn 참고\n * @extends {IntersectionObserverInit}\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n */\nexport interface StageOption extends IntersectionObserverInit {}\n\n/**\n * 관찰대상의 이벤트\n * @implements {AppearEventData<T>}\n * @template T\n */\nexport class AppearEvent<T = IActor> implements AppearEventData<T> {\n  /**\n   * @param type 이벤트 타입\n   * @param option 이벤트 데이터\n   */\n  constructor(type: string, option: AppearEventData<T>) {\n    const { actor, entry } = option;\n    this.type = type;\n    this.actor = actor;\n    this.entry = entry;\n  }\n\n  /**\n   * 이벤트 타입 - 진입\n   */\n  static readonly APPEAR: string = \"APPEAR\";\n\n  /**\n   * 이벤트 타입 - 이탈\n   */\n  static readonly DISAPPEAR: string = \"DISAPPEAR\";\n\n  /**\n   * 이벤트 타입\n   */\n  type: string;\n\n  /**\n   * 참조되는 관찰대상\n   */\n  actor: T;\n\n  /**\n   * 인터섹션 옵저버의 진입, 이탈 당시 관찰 상태\n   */\n  entry: IntersectionObserverEntry;\n}\n\n/**\n * Appear 이벤트의 데이터\n * @interface AppearEventData\n * @property actor {T} 참조되는 관찰대상\n * @property entry {IntersectionObserverEntry} 인터섹션 옵저버의 진입, 이탈 당시 관찰 상태\n * @template T\n */\nexport interface AppearEventData<T> {\n  actor: T;\n  entry: IntersectionObserverEntry;\n}\n","import \"intersection-observer\";\n\nexport * from \"./stage/appear-stage\";\nexport * from \"./actor/base-actor\";\nexport * from \"./actor/once-actor\";\nexport * from \"./actor/lazy-actor\";\nexport * from \"./common/types\";\n","import { IStage, StageOption, Actor, ActorElement } from \"../common/types\";\n\n/**\n * 화면(지정된 root 영역)에 진입 여부를 판단하고 알리기 위한 클래스.\n * 등록된 Actor(s)를 IntersectionObserver 를 통해 관찰하고 관찰된 상태에 따라 Actor 에게 알림.\n * @template T Actor\n */\nexport class AppearStage<T extends Actor = Actor> implements IStage<T> {\n  /**\n   * Actor 맵\n   */\n  protected actorMap: Map<ActorElement, T>;\n\n  /**\n   * IntersectionObserver\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n   */\n  protected observer: IntersectionObserver;\n\n  /**\n   * 초기화\n   * @param [option] 초기 옵션. 인터섹션 옵저버는 생성시에만 옵션 지정이 가능\n   */\n  init(option: StageOption = {}): void {\n    if (!this.observer) {\n      this.actorMap = new Map<ActorElement, T>();\n      this.observer = new IntersectionObserver(\n        this.onObserveEntries.bind(this),\n        option\n      );\n    }\n  }\n\n  /**\n   * 전달된 actor 를 옵저버에 등록합니다.\n   * @param actor 등록할 Actor\n   */\n  observe(actor: T): void {\n    const { element } = actor;\n    if (this.actorMap && !this.actorMap.has(element)) {\n      actor.bind(this);\n      this.actorMap.set(element, actor);\n      this.intersectionObserver.observe(element);\n    }\n  }\n\n  /**\n   * 전달된 actor 를 옵저버에서 제외합니다.\n   * @param actor 제외할 Actor\n   */\n  unobserve(actor: T): void {\n    const { element } = actor;\n    if (this.actorMap && this.actorMap.has(element)) {\n      this.actorMap.delete(element);\n      this.intersectionObserver.unobserve(element);\n    }\n  }\n\n  /**\n   * 옵저버에 등록(관찰) 중 인 Actor 의 수\n   */\n  get actorSize() {\n    return this.actorMap ? this.actorMap.size : 0;\n  }\n\n  /**\n   * 등록 되어있는 Actor 를 반환 합니다.\n   * @returns T[]\n   */\n  getActors(): T[] {\n    return Array.from(this.actorMap ? this.actorMap.values() : []);\n  }\n\n  /**\n   * 생성된 intersection observer 인스턴스\n   */\n  get intersectionObserver(): IntersectionObserver {\n    if (!this.observer) throw new Error(\"uninitialize\");\n    return this.observer;\n  }\n\n  /**\n   * 옵저버의 콜백 핸들러\n   * @param entries 옵저버의 콜백으로 전달받는 엔트리 값\n   */\n  protected onObserveEntries(entries: IntersectionObserverEntry[]) {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      const { isIntersecting, target } = entry;\n      const actor = this.actorMap.get(target);\n      if (actor) {\n        if (isIntersecting) {\n          actor.appear(entry);\n        } else {\n          actor.disappear(entry);\n        }\n      }\n    });\n  }\n\n  /**\n   * 파기\n   */\n  dispose(): void {\n    if (this.actorMap) {\n      this.actorMap.clear();\n      this.actorMap = null;\n    }\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SampleActorComponent } from \"~/dev/app/modules/example/common/sample-actor/sample-actor.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [SampleActorComponent],\n  declarations: [SampleActorComponent],\n})\nexport class ExampleCommonModule {}\n","export default \":host {\\n  display: block;\\n  margin: 10px;\\n  padding: 20px;\\n  color: #333333;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  background-color: #ffffff;\\n  transition: color 300ms, background-color 300ms;\\n}\\n:host.is-appeared {\\n  color: #ffffff;\\n  background-color: #333333;\\n}\\n:host .panel-count {\\n  display: flex;\\n  text-align: center;\\n}\\n:host .panel-count .spacer {\\n  flex: 1;\\n  min-width: 20px;\\n}\\n:host .panel-count .label {\\n  display: block;\\n  font-size: 13px;\\n}\\n:host .panel-count .count {\\n  display: block;\\n  padding-top: 5px;\\n  font-size: 24px;\\n  font-weight: bold;\\n}\\n:host .panel-item {\\n  padding-top: 5px;\\n  text-align: center;\\n  font-size: 13px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2Rldi9zcmMvYXBwL21vZHVsZXMvZXhhbXBsZS9jb21tb24vc2FtcGxlLWFjdG9yL3NhbXBsZS1hY3Rvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EseUJBQUE7RUFDQSwrQ0FBQTtBQUNGO0FBQUU7RUFDRSxjQUFBO0VBQ0EseUJBQUE7QUFFSjtBQUNFO0VBQ0UsYUFBQTtFQUNBLGtCQUFBO0FBQ0o7QUFBSTtFQUNFLE9BQUE7RUFDQSxlQUFBO0FBRU47QUFBSTtFQUNFLGNBQUE7RUFDQSxlQUFBO0FBRU47QUFBSTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQUVOO0FBRUU7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUFKIiwiZmlsZSI6InByb2plY3RzL2Rldi9zcmMvYXBwL21vZHVsZXMvZXhhbXBsZS9jb21tb24vc2FtcGxlLWFjdG9yL3NhbXBsZS1hY3Rvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMTBweDtcbiAgcGFkZGluZzogMjBweDtcbiAgY29sb3I6ICMzMzMzMzM7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMsIGJhY2tncm91bmQtY29sb3IgMzAwbXM7XG4gICYuaXMtYXBwZWFyZWQge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XG4gIH1cblxuICAucGFuZWwtY291bnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC5zcGFjZXIge1xuICAgICAgZmxleDogMTtcbiAgICAgIG1pbi13aWR0aDogMjBweDtcbiAgICB9XG4gICAgLmxhYmVsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgIH1cbiAgICAuY291bnQge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nLXRvcDogNXB4O1xuICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxuICB9XG5cbiAgLnBhbmVsLWl0ZW0ge1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgfVxufVxuIl19 */\";","import { Subscription } from \"rxjs\";\nimport {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n} from \"@angular/core\";\nimport {\n  Actor,\n  OnceActor,\n  LazyActor,\n  BaseActor,\n  AppearEvent,\n} from \"projects/packages/src/public-api\";\nimport {\n  SampleActorType,\n  SampleActorEvent,\n  SampleActorEventType,\n} from \"~/dev/app/modules/example/common/sample-actor/types\";\n\n@Component({\n  selector: \"sample-actor\",\n  templateUrl: \"./sample-actor.component.html\",\n  styleUrls: [\"./sample-actor.component.scss\"],\n})\nexport class SampleActorComponent implements OnInit {\n  constructor(private elRef: ElementRef) {\n    this.appearerListener = new Subscription();\n  }\n\n  actor: Actor;\n  appearerListener: Subscription;\n\n  @Input()\n  item: any;\n\n  @Input()\n  actorType: SampleActorType;\n\n  @Output(\"sampleEvent\")\n  emitter: EventEmitter<SampleActorEvent> = new EventEmitter();\n\n  @HostBinding(\"class.is-appeared\")\n  get isAppeared() {\n    return !!(this.actor && this.actor.isAppear);\n  }\n\n  ngOnInit() {\n    const { nativeElement } = this.elRef;\n    switch (this.actorType) {\n      case SampleActorType.ONCE:\n        this.actor = new OnceActor(nativeElement);\n        break;\n      case SampleActorType.LAZY:\n        this.actor = new LazyActor(nativeElement);\n        this.actor.setCheckoutDelay(1000);\n        this.actor.setAppearDelay(200);\n        break;\n      default:\n        this.actor = new BaseActor(nativeElement);\n        break;\n    }\n\n    const observeAppearEvent = this.actor.events.subscribe(\n      this.onAppearEvent.bind(this)\n    );\n    this.appearerListener.add(observeAppearEvent);\n    this.emitter.emit({\n      type: SampleActorEventType.ATTACH,\n      actor: this.actor,\n    });\n  }\n\n  appearCount: number = 0;\n  disappearCount: number = 0;\n\n  onAppearEvent(evt: AppearEvent) {\n    switch (evt.type) {\n      case AppearEvent.APPEAR:\n        this.appearCount++;\n        break;\n      case AppearEvent.DISAPPEAR:\n        this.disappearCount++;\n        break;\n    }\n  }\n\n  ngOnDestroy() {\n    try {\n      this.emitter.emit({\n        type: SampleActorEventType.DETACH,\n        actor: this.actor,\n      });\n      if (this.appearerListener) {\n        this.appearerListener.unsubscribe();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","import { Actor } from \"projects/packages/src/public-api\";\n\nexport enum SampleActorType {\n  BASE = \"base\",\n  ONCE = \"once\",\n  LAZY = \"lazy\",\n}\n\nexport enum SampleActorEventType {\n  ATTACH = \"ATTACH\",\n  DETACH = \"DETACH\",\n}\n\nexport interface SampleActorEvent {\n  type: SampleActorEventType;\n  actor: Actor;\n}\n","export default \".horizontal-list {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  overflow-x: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2Rldi9zcmMvYXBwL3BhZ2VzL2RlbW8vYmFzZS1hY3Rvci9iYXNlLWFjdG9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDRiIsImZpbGUiOiJwcm9qZWN0cy9kZXYvc3JjL2FwcC9wYWdlcy9kZW1vL2Jhc2UtYWN0b3IvYmFzZS1hY3Rvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob3Jpem9udGFsLWxpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgb3ZlcmZsb3cteDogYXV0bztcbn1cbiJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { AppearStage } from \"projects/packages/src/public-api\";\nimport {\n  SampleActorEvent,\n  SampleActorEventType,\n} from \"~/dev/app/modules/example/common/sample-actor/types\";\n\n@Component({\n  selector: \"example-base-actor\",\n  templateUrl: \"./base-actor.component.html\",\n  styleUrls: [\"./base-actor.component.scss\"],\n})\nexport class BaseActorComponent implements OnInit {\n  constructor() {}\n\n  actorMakeList: any[] = [];\n  appearStage: AppearStage;\n\n  ngOnInit() {\n    this.actorMakeList = Array.from(Array(50)).map((a, b) => {\n      return { id: b };\n    });\n    this.appearStage = new AppearStage();\n    this.appearStage.init();\n  }\n\n  onSampleAppearEvent(evt: SampleActorEvent) {\n    const { type, actor } = evt;\n    switch (type) {\n      case SampleActorEventType.ATTACH:\n        this.appearStage.observe(actor);\n        break;\n      case SampleActorEventType.DETACH:\n        this.appearStage.unobserve(actor);\n        break;\n    }\n  }\n\n  ngOnDestroy() {\n    try {\n      if (this.appearStage) {\n        this.appearStage.dispose();\n        this.appearStage = null;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RoutingModule } from \"~/dev/app/pages/demo/demo.routing\";\nimport { SharedModule } from \"~/dev/app/shared/shared.module\";\nimport { ExampleCommonModule } from \"~/dev/app/modules/example/common/common.module\";\nimport { BaseActorComponent } from \"./base-actor/base-actor.component\";\nimport { OnceActorComponent } from \"./once-actor/once-actor.component\";\nimport { LazyActorComponent } from \"./lazy-actor/lazy-actor.component\";\n\n@NgModule({\n  imports: [CommonModule, RoutingModule, SharedModule, ExampleCommonModule],\n  declarations: [BaseActorComponent, OnceActorComponent, LazyActorComponent],\n})\nexport class PageModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { BaseActorComponent } from \"./base-actor/base-actor.component\";\nimport { OnceActorComponent } from \"./once-actor/once-actor.component\";\nimport { LazyActorComponent } from \"./lazy-actor/lazy-actor.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    children: [\n      {\n        path: \"base-actor\",\n        component: BaseActorComponent,\n      },\n      {\n        path: \"once-actor\",\n        component: OnceActorComponent,\n      },\n      {\n        path: \"lazy-actor\",\n        component: LazyActorComponent,\n      },\n      {\n        path: \"**\",\n        component: BaseActorComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RoutingModule {}\n","export default \".horizontal-list {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  overflow-x: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2Rldi9zcmMvYXBwL3BhZ2VzL2RlbW8vbGF6eS1hY3Rvci9sYXp5LWFjdG9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDRiIsImZpbGUiOiJwcm9qZWN0cy9kZXYvc3JjL2FwcC9wYWdlcy9kZW1vL2xhenktYWN0b3IvbGF6eS1hY3Rvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob3Jpem9udGFsLWxpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgb3ZlcmZsb3cteDogYXV0bztcbn1cbiJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { AppearStage } from \"projects/packages/src/public-api\";\nimport {\n  SampleActorEvent,\n  SampleActorEventType,\n} from \"~/dev/app/modules/example/common/sample-actor/types\";\n\n@Component({\n  selector: \"example-lazy-actor\",\n  templateUrl: \"./lazy-actor.component.html\",\n  styleUrls: [\"./lazy-actor.component.scss\"],\n})\nexport class LazyActorComponent implements OnInit {\n  constructor() {}\n\n  actorMakeList: any[];\n  appearStage: AppearStage;\n\n  ngOnInit() {\n    this.actorMakeList = Array.from(Array(50)).map((a, b) => {\n      return { id: b };\n    });\n    this.appearStage = new AppearStage();\n    this.appearStage.init();\n  }\n\n  onSampleAppearEvent(evt: SampleActorEvent) {\n    const { type, actor } = evt;\n    switch (type) {\n      case SampleActorEventType.ATTACH:\n        this.appearStage.observe(actor);\n        break;\n      case SampleActorEventType.DETACH:\n        this.appearStage.unobserve(actor);\n        break;\n    }\n  }\n\n  ngOnDestroy() {\n    try {\n      if (this.appearStage) {\n        this.appearStage.dispose();\n        this.appearStage = null;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","export default \".horizontal-list {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  overflow-x: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2Rldi9zcmMvYXBwL3BhZ2VzL2RlbW8vb25jZS1hY3Rvci9vbmNlLWFjdG9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDRiIsImZpbGUiOiJwcm9qZWN0cy9kZXYvc3JjL2FwcC9wYWdlcy9kZW1vL29uY2UtYWN0b3Ivb25jZS1hY3Rvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob3Jpem9udGFsLWxpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgb3ZlcmZsb3cteDogYXV0bztcbn1cbiJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { AppearStage } from \"projects/packages/src/public-api\";\nimport {\n  SampleActorEvent,\n  SampleActorEventType,\n} from \"~/dev/app/modules/example/common/sample-actor/types\";\n\n@Component({\n  selector: \"example-once-actor\",\n  templateUrl: \"./once-actor.component.html\",\n  styleUrls: [\"./once-actor.component.scss\"],\n})\nexport class OnceActorComponent implements OnInit {\n  constructor() {}\n\n  actorMakeList: any[];\n  appearStage: AppearStage;\n\n  ngOnInit() {\n    this.actorMakeList = Array.from(Array(50)).map((a, b) => {\n      return { id: b };\n    });\n    this.appearStage = new AppearStage();\n    this.appearStage.init();\n  }\n\n  onSampleAppearEvent(evt: SampleActorEvent) {\n    const { type, actor } = evt;\n    switch (type) {\n      case SampleActorEventType.ATTACH:\n        this.appearStage.observe(actor);\n        break;\n      case SampleActorEventType.DETACH:\n        this.appearStage.unobserve(actor);\n        break;\n    }\n  }\n\n  ngOnDestroy() {\n    try {\n      if (this.appearStage) {\n        this.appearStage.dispose();\n        this.appearStage = null;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}